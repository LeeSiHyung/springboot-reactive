plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.9.2"
}

group = 'com.bluecreator'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.16.2")
    snippetsDir = file('build/generated-snippets')

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // starter-web은 SERVLET으로 자동으로 선택한다. 만약 같이 사용해야된다면 아래와 같이 설정해야 된다.
    // public static void main(String[] args) {
    //     SpringApplication application = new SpringApplication(DemoApplication.class);
    //     application.setWebApplicationType(WebApplicationType.REACTIVE);
    //     application.run(args);
    // }
    // implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    // testImplementation 'io.projectreactor.tools:blockhound-junit-platform:1.0.3.RELEASE'
    // testImplementation 'org.testcontainers:junit-jupiter'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    implementation 'org.mongodb:mongodb-driver-sync'
    implementation 'io.projectreactor.tools:blockhound:1.0.6.RELEASE'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    // testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}


task copyDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}